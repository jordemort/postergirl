name: Publish container

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-container:
    runs-on: ubuntu-24.04
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        id: login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tag
        uses: actions/github-script@v7
        id: container_tag
        with:
          script: |
            let raw_tag = '${{ github.event.pull_request.head.ref || 'latest' }}';
            let clean_tag = raw_tag.replaceAll(/[^a-zA-Z0-9]+/g, '-').substring(0, 128);
            return (clean_tag == 'main' ? 'latest' : clean_tag);
          result-encoding: string

      - name: Generate metadata for image
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: "ghcr.io/jordemort/postergirl"
          tags: type=raw,value=${{ steps.container_tag.outputs.result }}
          labels: |
            org.opencontainers.image.title="Postergirl"
            org.opencontainers.image.description="Tool for posting web content to Mastodon-like services"
            org.opencontainers.image.vendor="jordan@jordemort.dev"

      - name: Checkout repository
        id: checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Build image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          load: false
          pull: true
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
